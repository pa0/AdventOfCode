---
title: "Untitled"
format: html
---

```{r}
dane <- readLines("input-test")
```

```{r}
# Podział danych na wiersze
wiersze <- strsplit(dane, "\n")
```


```{r}
# sprawdzić czy 
```


```{r}
# Podział każdego wiersza na pojedyncze znaki
macierz_znakow <- lapply(wiersze, strsplit, split = "")

# Przekształcenie na macierz
macierz <- matrix(unlist(macierz_znakow), nrow = length(wiersze), byrow = TRUE)

k <- dim(macierz)[2]
w <- dim(macierz)[1]
```

```{r}
macierz |> as.vector() |> unique() |> sort() -> tmp
tmp[!(tmp %in% 0:9)][-1] -> znaki
#tmp[!(tmp %in% 0:9)][-2] -> znaki
```


```{r}
# powiekszam macierz o margines
macierz <- cbind(rep(".", w), macierz, rep(".", w))
```



```{r}
which(macierz %in% znaki) -> miejsca_znaki
macierzTF <- matrix(0, w,k+2)  # +2 bo dodałem margines

for(i in seq_along(miejsca_znaki)) {
  miejsca_znaki[i] %% w -> wiersz
  (miejsca_znaki[i] %/% k) + 1 -> kolumna
  
  which(macierz[wiersz + c(-1, 0, 1), kolumna + c(-1, 0, 1)] %in% c("1", "2", "3", "4", "5", "6", "7", "8", "9")) -> tu_cyfry

  macierzTF[wiersz + c(-1, 0, 1), kolumna + c(-1, 0, 1)][tu_cyfry] <- 1
}

macierzTF
```

```{r}
apply(macierzTF, 1, function(x){
  which(x == 1)
})


```

